name: build
on: [push]
jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: ubuntu
            tag: 20.04
          - os: ubuntu
            tag: latest
          - os: debian
            tag: buster-slim
          - os: debian
            tag: bullseye-slim
          - os: debian
            tag: sid-slim
          - os: debian
            tag: latest
    container:
      image: ${{ matrix.os }}:${{ matrix.tag }}
    steps:
    - uses: actions/checkout@v3
    - name: depends
      run: |
        apt update
        DEBIAN_FRONTEND=noninteractive apt -y install clang cmake make libboost-program-options-dev devscripts pbuilder aptitude
    - name: build deb
      run: |
        debuild-pbuilder -us -uc -nc
        cp -v ../supersm_*_amd64.deb ./
    - uses: actions/upload-artifact@v2
      with:
        name: supersm-linux-${{ matrix.os }}-${{ matrix.tag }}-amd64.deb
        path: '**/*.deb'

  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - name: depends
      run: brew install boost llvm
    - name: build
      run: |
        cmake -DCMAKE_C_COMPILER=$(brew --prefix llvm)/bin/clang \
          -DCMAKE_CXX_COMPILER=$(brew --prefix llvm)/bin/clang++ \
          -B build
        cmake --build build
    - uses: actions/upload-artifact@v1
      with:
        name: supersm-macos
        path: ./build/supersm

  windows:
    runs-on: windows-latest
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: >-
          mingw-w64-x86_64-boost
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-clang
          mingw-w64-x86_64-make
    - uses: actions/checkout@v3
    - name: build
      shell: msys2 {0}
      working-directory: ./
      run: cmake -B build -G "MinGW Makefiles" && cmake --build build
    - uses: actions/upload-artifact@v1
      with:
        name: supersm-windows
        path: ./build/supersm.exe

